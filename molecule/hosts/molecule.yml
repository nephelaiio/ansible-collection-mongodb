---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: default
platforms:
  - name: mongodb-hosts-mongos01
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_mongos
      - mongodb
  - name: mongodb-hosts-mongos02
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_mongos
      - mongodb
  - name: mongodb-hosts-config01
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_config
      - mongodb
  - name: mongodb-hosts-config02
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_config
      - mongodb
  - name: mongodb-hosts-config03
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_config
      - mongodb
  - name: mongodb-hosts-shard01
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_shard1
      - mongodb
  - name: mongodb-hosts-shard02
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_shard1
      - mongodb
  - name: mongodb-hosts-shard03
    image: "${MOLECULE_KVM_IMAGE}"
    groups:
      - mongodb_shard1
      - mongodb
provisioner:
  name: ansible
  playbooks:
    create: ../common/create.yml
    prepare: ../common/prepare.yml
    destroy: ../common/destroy.yml
  config_options:
    defaults:
      callbacks_enabled: ansible.posix.profile_tasks
  inventory:
    hosts:
      all:
        vars:
          libvirt_platforms: "{{ molecule_yml.platforms }}"
          mongodb_cluster_state_original: /tmp/state.0.yml
          mongodb_cluster_state_reconfig: /tmp/state.1.yml
      mongodb_mongos:
        vars:
          mongodb_votes_group: "_replicaset_votes_mongos"
          mongodb_non_votes_group: "_replicaset_non_votes_mongos"
          mongodb_voting_group: "_replicaset_voting_mongos"
          mongodb_priority_group: "_replicaset_priority_mongos"
          mongodb_non_priority_group: "_replicaset_non_priority_mongos"
          mongodb_compliant_group: "_replicaset_compliant_mongos"
          mongodb_non_compliant_group: "_replicaset_non_compliant_mongos"
          mongodb_non_voting_group: "_replicaset_non_voting_mongos"
          mongodb_alien_group: "_replicaset_alien_mongos"
          mongodb_non_alien_group: "_replicaset_non_alien_mongos"
          mongodb_member_group: "_replicaset_member_mongos"
          mongodb_failed_group: "_replicaset_failed_mongos"
      mongodb_config:
        vars:
          mongodb_votes_group: "_replicaset_votes_config"
          mongodb_non_votes_group: "_replicaset_non_votes_config"
          mongodb_voting_group: "_replicaset_voting_config"
          mongodb_priority_group: "_replicaset_priority_config"
          mongodb_non_priority_group: "_replicaset_non_priority_config"
          mongodb_compliant_group: "_replicaset_compliant_config"
          mongodb_non_compliant_group: "_replicaset_non_compliant_config"
          mongodb_non_voting_group: "_replicaset_non_voting_config"
          mongodb_alien_group: "_replicaset_alien_config"
          mongodb_non_alien_group: "_replicaset_non_alien_config"
          mongodb_member_group: "_replicaset_member_config"
          mongodb_failed_group: "_replicaset_failed_config"
      mongodb_shard1:
        vars:
          mongodb_votes_group: "_replicaset_votes_shard1"
          mongodb_non_votes_group: "_replicaset_non_votes_shard1"
          mongodb_voting_group: "_replicaset_voting_shard1"
          mongodb_priority_group: "_replicaset_priority_shard1"
          mongodb_non_priority_group: "_replicaset_non_priority_shard1"
          mongodb_compliant_group: "_replicaset_compliant_shard1"
          mongodb_non_compliant_group: "_replicaset_non_compliant_shard1"
          mongodb_non_voting_group: "_replicaset_non_voting_shard1"
          mongodb_alien_group: "_replicaset_alien_shard1"
          mongodb_non_alien_group: "_replicaset_non_alien_shard1"
          mongodb_member_group: "_replicaset_member_shard1"
          mongodb_failed_group: "_replicaset_failed_shard1"
verifier:
  name: ansible
scenario:
  prepare_sequence:
    - prepare
  converge_sequence:
    - converge
  destroy_sequence:
    - destroy
  cleanup_sequence:
    - cleanup
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - side_effect
    - verify
