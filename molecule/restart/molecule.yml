---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: docker
platforms:
  - name: mongodb-restart-mongos01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_mongos
      - mongodb
  - name: mongodb-restart-mongos02
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_mongos
      - mongodb
  - name: mongodb-restart-config01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_config
      - mongodb
  - name: mongodb-restart-config02
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_config
      - mongodb
  - name: mongodb-restart-config03
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_config
      - mongodb
  - name: mongodb-restart-shard01
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_shard1
      - mongodb
  - name: mongodb-restart-shard02
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_shard1
      - mongodb
  - name: mongodb-restart-shard03
    image: "geerlingguy/docker-${MOLECULE_DOCKER_IMAGE:-ubuntu2004}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    cgroupns_mode: host
    privileged: true
    pre_build_image: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
    tmpfs:
      - /tmp
      - /opt
    groups:
      - mongodb_shard1
      - mongodb
provisioner:
  name: ansible
  playbooks:
    prepare: ../common/prepare.yml
    converge: ../common/install.yml
    side_effect: ../common/restart.yml
    verify: ../common/verify.yml
  config_options:
    defaults:
      callbacks_enabled: ansible.posix.profile_tasks
verifier:
  name: ansible
scenario:
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - side_effect
    - verify
    - destroy
    - cleanup
