---
- name: Gather cluster host facts
  hosts: "{{ mongodb | default('mongodb') }}"


- name: Deploy MongoDB Mongos servers
  hosts: "{{ mongodb_mongos | default('mongodb_mongos') }}"
  become: true
  serial: 1
  roles:
    - nephelaiio.mongodb.repo
    - nephelaiio.mongodb.mongos
  pre_tasks:
    - name: Include collection variables
      ansible.builtin.include_vars:
        file: main.yml

    - name: Set cluster facts
      ansible.builtin.set_fact:
        mongos_replicaset_config_members: "{{ groups[_group] | map('extract', hostvars, mongodb_address_attrs) }}"
      vars:
        _group: "{{ mongodb_config | default('mongodb_config') }}"


- name: Configure MongoDB cluster
  hosts: "{{ mongodb_mongos | default('mongodb_mongos') }}"
  become: true
  pre_tasks:
    - name: Include collection variables
      ansible.builtin.include_vars:
        file: main.yml
  tasks:
    - name: Register cluster shards
      when: mongodb_shard_clusters is defined
      run_once: true
      block:
        - name: Query registered shards
          community.mongodb.mongodb_shell:
            db: "admin"
            eval: "db.runCommand({listshards: 1})"
          register: _shard_query
          changed_when: false

        - name: Debug shard cluster list
          ansible.builtin.debug:
            msg: "Cluster shards: {{ _shards | map(attribute='_id') | list | join (',') }}"
          vars:
            _shards: "{{ _shard_query.transformed_output.shards }}"

        - name: Register shards
          community.mongodb.mongodb_shell:
            db: "admin"
            eval: "sh.addShard('{{ _shard }}')"
          vars:
            _hosts: "{{ groups[item.group] | map('extract', hostvars, mongodb_address_attrs) }}"
            _members: "{{ _hosts | map('nephelaiio.plugins.map_format', '%s:' + mongodb_port) }}"
            _shard: "{{ item.name }}/{{ _members | join(',') }}"
            _shard_ids: "{{ _shard_query.transformed_output.shards | map(attribute='_id') | list }}"
          loop_control:
            label: "{{ _shard }}"
          loop: "{{ mongodb_shard_clusters }}"
          when: item.name not in _shard_ids

        - name: Refresh registered shard clusters
          community.mongodb.mongodb_shell:
            db: "admin"
            eval: "db.runCommand({listshards: 1})"
          register: _shard_query
          changed_when: false

        - name: Debug shard cluster list
          ansible.builtin.debug:
            msg: "Cluster shards: {{ _shards | map(attribute='_id') | list | join (',') }}"
          vars:
            _shards: "{{ _shard_query.transformed_output.shards }}"
