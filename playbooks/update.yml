---
- name: Update config nodes
  serial: 1
  hosts: "{{ __mongodb_config }}"
  become: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.mongodb.update
  tasks:
    - name: Include Mongos service tasks
      ansible.builtin.include_role:
        name: nephelaiio.mongodb.mongodb
        tasks_from: service

    - name: Reboot node
      ansible.builtin.reboot:

    - name: Wait for replica set to stabilize
      community.mongodb.mongodb_status:
        replica_set: "{{ mongos_replicaset_config_name | default('config') }}"
        validate: minimal
        poll: "{{ _mongodb_reconfig_poll }}"
        interval: "{{ _mongodb_reconfig_interval }}"


- name: Update shard1 nodes
  serial: 1
  hosts: "{{ __mongodb_shard1 }}"
  become: true
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.mongodb.update
  tasks:
    - name: Include Mongos service tasks
      ansible.builtin.include_role:
        name: nephelaiio.mongodb.mongodb
        tasks_from: service

    - name: Reboot node
      ansible.builtin.reboot:

    - name: Wait for replica set to stabilize
      community.mongodb.mongodb_status:
        replica_set: "{{ mongos_replicaset_shard1_name | default('shard1') }}"
        validate: minimal
        poll: "{{ _mongodb_reconfig_poll }}"
        interval: "{{ _mongodb_reconfig_interval }}"


- name: Update Mongos nodes
  hosts: "{{ __mongodb_mongos }}"
  become: true
  serial: 1
  vars_files:
    - main.yml
  vars:
    update_reboot: false
    update_cache_valid_time: 1
  roles:
    - nephelaiio.mongodb.update
  tasks:
    - name: Include Mongos service tasks
      ansible.builtin.include_role:
        name: nephelaiio.mongodb.mongos
        tasks_from: service

    - name: Reboot node
      ansible.builtin.reboot:

    - name: Check Mongos cluster status
      community.mongodb.mongodb_shell:
        login_database: "admin"
        eval: "sh.status()"
      retries: "{{ _mongodb_reconfig_poll }}"
      delay: "{{ _mongodb_reconfig_interval }}"
      changed_when: false
